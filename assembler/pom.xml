<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.github.nbauma109</groupId>
    <artifactId>jd-gui-duo-parent</artifactId>
    <version>2.0.96-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>jd-gui-duo</artifactId>
  <packaging>pom</packaging>

  <properties>
    <jre.builder.version>4.0.0</jre.builder.version>
    <jre.version>21.0.6</jre.version>
    <app.icon.path>../app/src/main/resources/org/jd/gui/images/JDGUI.icns</app.icon.path>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/resources</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.googlecode.maven-download-plugin</groupId>
        <artifactId>download-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>download-jre-windows</id>
            <phase>package</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <url>https://github.com/nbauma109/jre-builder/releases/download/${jre.builder.version}/jre-${jre.builder.version}-${jre.version}-windows.zip</url>
              <unpack>true</unpack>
              <outputDirectory>${project.build.directory}/windows/jre</outputDirectory>
              <sha512>1df09e495aa76e55928d93f17f6128b0b05d8de817404d71b71ffc3c70f1c7d044a74d38b046bc69e8d71b49fa066336f4f43bbc2d9cbd907e34a881b19e0a05</sha512>
            </configuration>
          </execution>
          <execution>
            <id>download-jre-linux</id>
            <phase>package</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <url>https://github.com/nbauma109/jre-builder/releases/download/${jre.builder.version}/jre-${jre.builder.version}-${jre.version}-linux.zip</url>
              <unpack>true</unpack>
              <outputDirectory>${project.build.directory}/linux/jre</outputDirectory>
              <sha512>07cf8d488c3ab7febe1f046a745cc6d5ecf62ddbe323ddac533278c2b5bc2abbb9407de330d4fa4380c1cdd0617d02a83b7935fbd19f18e11c8be3f31ac77598</sha512>
            </configuration>
          </execution>
          <execution>
            <id>download-jre-macos</id>
            <phase>package</phase>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <url>https://github.com/nbauma109/jre-builder/releases/download/${jre.builder.version}/jre-${jre.builder.version}-${jre.version}-macos.zip</url>
              <unpack>true</unpack>
              <outputDirectory>${project.build.directory}/macos/jre</outputDirectory>
              <sha512>8100c651e49263f8e4fed00f8823f962dcaadf93840671edec59539ee399526cf5bdc358cc6f34901d5f86d20ce40071d6707ee098a00e350d3ae5c828652bcc</sha512>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <excludeArtifactIds>jd-gui-duo-api,jd-gui-duo-services</excludeArtifactIds>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>build-macos-app-bundle</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <property name="app.dir" value="${project.build.directory}/macos/jd-gui-duo.app"/>

                <mkdir dir="${app.dir}/Contents/MacOS"/>
                <mkdir dir="${app.dir}/Contents/Resources"/>
                <mkdir dir="${app.dir}/Contents/lib"/>
                <mkdir dir="${app.dir}/Contents/runtime"/>

                <!-- icon -->
                <copy file="${app.icon.path}" tofile="${app.dir}/Contents/Resources/JDGUI.icns" overwrite="true"/>

                <!-- JRE into app -->
                <copy todir="${app.dir}/Contents/runtime">
                  <fileset dir="${project.build.directory}/macos/jre"/>
                </copy>

                <!-- libraries -->
                <copy todir="${app.dir}/Contents/lib">
                  <fileset dir="${project.build.directory}/lib"/>
                </copy>

                <!-- Info.plist -->
                <echo file="${app.dir}/Contents/Info.plist"><![CDATA[
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0"><dict>
  <key>CFBundleName</key><string>JD-GUI Duo</string>
  <key>CFBundleIdentifier</key><string>com.github.nbauma109.jd-gui-duo</string>
  <key>CFBundleVersion</key><string>${project.version}</string>
  <key>CFBundleShortVersionString</key><string>${project.version}</string>
  <key>CFBundleIconFile</key><string>JDGUI</string>
  <key>CFBundlePackageType</key><string>APPL</string>
  <key>LSMinimumSystemVersion</key><string>11.0</string>
  <key>NSHighResolutionCapable</key><true/>
</dict></plist>
]]></echo>

                <!-- native launcher -->
                <echo file="${app.dir}/Contents/MacOS/jd-gui-duo"><![CDATA[
#!/usr/bin/env bash
APP_DIR="$(cd "$(dirname "$0")/.." && pwd)"
JRE="$APP_DIR/runtime"
JAVA="$JRE/bin/java"
LIB="$APP_DIR/lib"
exec "$JAVA" -ea \
  --add-opens=java.base/java.net=ALL-UNNAMED \
  --add-opens=java.desktop/javax.swing.text=ALL-UNNAMED \
  --add-opens=java.desktop/javax.swing.plaf.basic=ALL-UNNAMED \
  --add-opens=java.prefs/java.util.prefs=ALL-UNNAMED \
  --add-opens=java.base/java.lang.ref=ALL-UNNAMED \
  -cp "$LIB/jd-gui-duo-app-${project.version}.jar:$LIB/*" \
  ${main.class} "$@"
]]></echo>
                <chmod file="${app.dir}/Contents/MacOS/jd-gui-duo" perm="0755"/>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>assemble-windows</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <attach>false</attach>
              <appendAssemblyId>false</appendAssemblyId>
              <finalName>jd-gui-duo-windows-${project.version}</finalName>
              <descriptors>
                <descriptor>assembly-windows.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>assemble-linux</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <attach>false</attach>
              <appendAssemblyId>false</appendAssemblyId>
              <finalName>jd-gui-duo-linux-${project.version}</finalName>
              <descriptors>
                <descriptor>assembly-linux.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
          <execution>
            <id>assemble-macos</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <attach>false</attach>
              <appendAssemblyId>false</appendAssemblyId>
              <finalName>jd-gui-duo-macos-${project.version}</finalName>
              <descriptors>
                <descriptor>assembly-macos.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-platform-zips</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <artifact>
                  <file>${project.build.directory}/jd-gui-duo-windows-${project.version}.tar.xz</file>
                  <type>tar.xz</type>
                  <classifier>windows</classifier>
                </artifact>
                <artifact>
                  <file>${project.build.directory}/jd-gui-duo-linux-${project.version}.tar.xz</file>
                  <type>tar.xz</type>
                  <classifier>linux</classifier>
                </artifact>
                <artifact>
                  <file>${project.build.directory}/jd-gui-duo-macos-${project.version}.tar.xz</file>
                  <type>tar.xz</type>
                  <classifier>macos</classifier>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <executions>
          <execution>
            <id>default-install</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>install-windows-tar.xz</id>
            <phase>install</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${project.build.directory}/jd-gui-duo-windows-${project.version}.tar.xz</file>
              <groupId>${project.groupId}</groupId>
              <artifactId>${project.artifactId}</artifactId>
              <version>${project.version}</version>
              <classifier>windows</classifier>
              <packaging>tar.xz</packaging>
            </configuration>
          </execution>
          <execution>
            <id>install-linux-tar.xz</id>
            <phase>install</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${project.build.directory}/jd-gui-duo-linux-${project.version}.tar.xz</file>
              <groupId>${project.groupId}</groupId>
              <artifactId>${project.artifactId}</artifactId>
              <version>${project.version}</version>
              <classifier>linux</classifier>
              <packaging>tar.xz</packaging>
            </configuration>
          </execution>
          <execution>
            <id>install-macos-tar.xz</id>
            <phase>install</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <file>${project.build.directory}/jd-gui-duo-macos-${project.version}.tar.xz</file>
              <groupId>${project.groupId}</groupId>
              <artifactId>${project.artifactId}</artifactId>
              <version>${project.version}</version>
              <classifier>macos</classifier>
              <packaging>tar.xz</packaging>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.akathist.maven.plugins.launch4j</groupId>
        <artifactId>launch4j-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>l4j-clui</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>launch4j</goal>
            </goals>
            <configuration>
              <headerType>gui</headerType>
              <outfile>${project.build.directory}/windows/jd-gui-duo-${project.version}.exe</outfile>
              <jar>${project.build.directory}/lib/jd-gui-duo-app-${project.version}.jar</jar>
              <classPath>
                <mainClass>${main.class}</mainClass>
                <addDependencies>false</addDependencies>
              </classPath>
              <jre>
                <path>jre</path>
                <opts>
                  <opt>-ea</opt>
                  <opt>--add-opens java.base/java.net=ALL-UNNAMED</opt>
                  <opt>--add-opens java.desktop/javax.swing.text=ALL-UNNAMED</opt>
                  <opt>--add-opens java.desktop/javax.swing.plaf.basic=ALL-UNNAMED</opt>
                  <opt>--add-opens java.prefs/java.util.prefs=ALL-UNNAMED</opt>
                  <opt>--add-opens java.base/java.lang.ref=ALL-UNNAMED</opt>
                </opts>
              </jre>
              <icon>${project.parent.basedir}/src/launch4j/resources/images/jd-gui.ico</icon>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>com.github.nbauma109</groupId>
      <artifactId>jd-gui-duo-app</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>

</project>
